"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[267],{3905:(e,t,n)=>{n.d(t,{Zo:()=>g,kt:()=>k});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},g=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),m=c(n),u=o,k=m["".concat(s,".").concat(u)]||m[u]||p[u]||a;return n?r.createElement(k,i(i({ref:t},g),{},{components:n})):r.createElement(k,i({ref:t},g))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6788:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_label:"network_filters",title:"core.messaging.networking.network_filters"},i=void 0,l={unversionedId:"reference/backend/core/messaging/networking/network_filters",id:"reference/backend/core/messaging/networking/network_filters",title:"core.messaging.networking.network_filters",description:"NetworkFilters Objects",source:"@site/docs/reference/backend/core/messaging/networking/network_filters.md",sourceDirName:"reference/backend/core/messaging/networking",slug:"/reference/backend/core/messaging/networking/network_filters",permalink:"/docs/reference/backend/core/messaging/networking/network_filters",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"network_filters",title:"core.messaging.networking.network_filters"},sidebar:"backendSidebar",previous:{title:"network_filter",permalink:"/docs/reference/backend/core/messaging/networking/network_filter"},next:{title:"network_router",permalink:"/docs/reference/backend/core/messaging/networking/network_router"}},s={},c=[{value:"NetworkFilters Objects",id:"networkfilters-objects",level:2},{value:"install",id:"install",level:4},{value:"filter_incoming_message",id:"filter_incoming_message",level:4},{value:"filter_outgoing_message",id:"filter_outgoing_message",level:4}],g={toc:c},m="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"networkfilters-objects"},"NetworkFilters Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class NetworkFilters()\n")),(0,o.kt)("p",null,"A list of network filters."),(0,o.kt)("h4",{id:"install"},"install"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def install(fltr: NetworkFilter) -> None\n")),(0,o.kt)("p",null,"Adds a new filter."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"fltr")," - The filter to add.")),(0,o.kt)("h4",{id:"filter_incoming_message"},"filter","_","incoming","_","message"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def filter_incoming_message(connection: NetworkFilter.ConnectionType,\n                            msg: Message,\n                            msg_meta: MessageMetaInformation) -> bool\n")),(0,o.kt)("p",null,"Filters incoming messages."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"connection")," - The connection the message came through."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"msg")," - The incoming message."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"msg_meta")," - The message meta information.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"  Whether the message should be filtered out."),(0,o.kt)("h4",{id:"filter_outgoing_message"},"filter","_","outgoing","_","message"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def filter_outgoing_message(connection: NetworkFilter.ConnectionType,\n                            msg: Message,\n                            msg_meta: MessageMetaInformation) -> bool\n")),(0,o.kt)("p",null,"Filters outgoing messages."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"connection")," - The connection the message is sent through."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"msg")," - The outgoing message."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"msg_meta")," - The message meta information.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"  Whether the message should pass."))}p.isMDXComponent=!0}}]);