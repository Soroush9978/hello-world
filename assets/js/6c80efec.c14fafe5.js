"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8212],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>b});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),s=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(i.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(t),u=a,b=d["".concat(i,".").concat(u)]||d[u]||m[u]||o;return t?r.createElement(b,c(c({ref:n},p),{},{components:t})):r.createElement(b,c({ref:n},p))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=u;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[d]="string"==typeof e?e:a,c[1]=l;for(var s=2;s<o;s++)c[s]=t[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9085:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const o={sidebar_label:"network_commands",title:"api.network.network_commands"},c=void 0,l={unversionedId:"reference/backend/api/network/network_commands",id:"reference/backend/api/network/network_commands",title:"api.network.network_commands",description:"PingCommand Objects",source:"@site/docs/reference/backend/api/network/network_commands.md",sourceDirName:"reference/backend/api/network",slug:"/reference/backend/api/network/network_commands",permalink:"/docs/reference/backend/api/network/network_commands",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"network_commands",title:"api.network.network_commands"},sidebar:"backendSidebar",previous:{title:"connector_events",permalink:"/docs/reference/backend/api/connector/connector_events"},next:{title:"network_events",permalink:"/docs/reference/backend/api/network/network_events"}},i={},s=[{value:"PingCommand Objects",id:"pingcommand-objects",level:2},{value:"build",id:"build",level:4},{value:"PingReply Objects",id:"pingreply-objects",level:2},{value:"build",id:"build-1",level:4}],p={toc:s},d="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(d,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"pingcommand-objects"},"PingCommand Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'@Message.define("command/general/ping")\nclass PingCommand(Command)\n')),(0,a.kt)("p",null,"A generic PING command."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Notes"),":"),(0,a.kt)("p",null,"  Requires a ",(0,a.kt)("inlineCode",{parentName:"p"},"PingReply")," reply."),(0,a.kt)("h4",{id:"build"},"build"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"@staticmethod\ndef build(message_builder: MessageBuilder,\n          *,\n          chain: Message | None = None) -> CommandComposer\n")),(0,a.kt)("p",null,"Helper function to easily build this message."),(0,a.kt)("h2",{id:"pingreply-objects"},"PingReply Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'@Message.define("command/general/ping/reply")\nclass PingReply(CommandReply)\n')),(0,a.kt)("p",null,"Reply to ",(0,a.kt)("inlineCode",{parentName:"p"},"PingCommand"),"."),(0,a.kt)("h4",{id:"build-1"},"build"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'@staticmethod\ndef build(message_builder: MessageBuilder,\n          cmd: PingCommand,\n          *,\n          success: bool = True,\n          message: str = "") -> CommandReplyComposer\n')),(0,a.kt)("p",null,"Helper function to easily build this message."))}m.isMDXComponent=!0}}]);