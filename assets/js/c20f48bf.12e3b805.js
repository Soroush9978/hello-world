"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5612],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>h});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function c(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?c(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},c=Object.keys(e);for(n=0;n<c.length;n++)t=c[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)t=c[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),i=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},l=function(e){var r=i(e.components);return n.createElement(p.Provider,{value:r},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,c=e.originalType,p=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),d=i(t),u=a,h=d["".concat(p,".").concat(u)]||d[u]||m[u]||c;return t?n.createElement(h,s(s({ref:r},l),{},{components:t})):n.createElement(h,s({ref:r},l))}));function h(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var c=t.length,s=new Array(c);s[0]=u;var o={};for(var p in r)hasOwnProperty.call(r,p)&&(o[p]=r[p]);o.originalType=e,o[d]="string"==typeof e?e:a,s[1]=o;for(var i=2;i<c;i++)s[i]=t[i];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6212:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>c,metadata:()=>o,toc:()=>i});var n=t(7462),a=(t(7294),t(3905));const c={sidebar_label:"command_reply_dispatcher",title:"core.messaging.dispatchers.command_reply_dispatcher"},s=void 0,o={unversionedId:"reference/backend/core/messaging/dispatchers/command_reply_dispatcher",id:"reference/backend/core/messaging/dispatchers/command_reply_dispatcher",title:"core.messaging.dispatchers.command_reply_dispatcher",description:"CommandReplyDispatcher Objects",source:"@site/docs/reference/backend/core/messaging/dispatchers/command_reply_dispatcher.md",sourceDirName:"reference/backend/core/messaging/dispatchers",slug:"/reference/backend/core/messaging/dispatchers/command_reply_dispatcher",permalink:"/docs/reference/backend/core/messaging/dispatchers/command_reply_dispatcher",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"command_reply_dispatcher",title:"core.messaging.dispatchers.command_reply_dispatcher"},sidebar:"backendSidebar",previous:{title:"command_dispatcher",permalink:"/docs/reference/backend/core/messaging/dispatchers/command_dispatcher"},next:{title:"event_dispatcher",permalink:"/docs/reference/backend/core/messaging/dispatchers/event_dispatcher"}},p={},i=[{value:"CommandReplyDispatcher Objects",id:"commandreplydispatcher-objects",level:2},{value:"pre_dispatch",id:"pre_dispatch",level:4}],l={toc:i},d="wrapper";function m(e){let{components:r,...t}=e;return(0,a.kt)(d,(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"commandreplydispatcher-objects"},"CommandReplyDispatcher Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class CommandReplyDispatcher(MessageDispatcher[CommandReply])\n")),(0,a.kt)("p",null,"Message dispatcher specific to ",(0,a.kt)("inlineCode",{parentName:"p"},"CommandReply"),"."),(0,a.kt)("h4",{id:"pre_dispatch"},"pre","_","dispatch"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def pre_dispatch(msg: CommandReply,\n                 msg_meta: CommandReplyMetaInformation) -> None\n")),(0,a.kt)("p",null,"Invokes reply callbacks associated with the replied command."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"msg")," - The command reply that is about to be dispatched."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"msg_meta")," - The command reply meta information.")))}m.isMDXComponent=!0}}]);