"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2776],{3905:(e,n,t)=>{t.d(n,{Zo:()=>i,kt:()=>k});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),m=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},i=function(e){var n=m(e.components);return a.createElement(c.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),p=m(t),d=r,k=p["".concat(c,".").concat(d)]||p[d]||u[d]||o;return t?a.createElement(k,l(l({ref:n},i),{},{components:t})):a.createElement(k,l({ref:n},i))}));function k(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[p]="string"==typeof e?e:r,l[1]=s;for(var m=2;m<o;m++)l[m]=t[m];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1324:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>m});var a=t(7462),r=(t(7294),t(3905));const o={sidebar_label:"command_composer",title:"core.messaging.composers.command_composer"},l=void 0,s={unversionedId:"reference/backend/core/messaging/composers/command_composer",id:"reference/backend/core/messaging/composers/command_composer",title:"core.messaging.composers.command_composer",description:"CommandComposer Objects",source:"@site/docs/reference/backend/core/messaging/composers/command_composer.md",sourceDirName:"reference/backend/core/messaging/composers",slug:"/reference/backend/core/messaging/composers/command_composer",permalink:"/docs/reference/backend/core/messaging/composers/command_composer",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"command_composer",title:"core.messaging.composers.command_composer"},sidebar:"backendSidebar",previous:{title:"command_reply",permalink:"/docs/reference/backend/core/messaging/command_reply"},next:{title:"command_reply_composer",permalink:"/docs/reference/backend/core/messaging/composers/command_reply_composer"}},c={},m=[{value:"CommandComposer Objects",id:"commandcomposer-objects",level:2},{value:"__init__",id:"__init__",level:4},{value:"done",id:"done",level:4},{value:"failed",id:"failed",level:4},{value:"async_callbacks",id:"async_callbacks",level:4},{value:"timeout",id:"timeout",level:4}],i={toc:m},p="wrapper";function u(e){let{components:n,...t}=e;return(0,r.kt)(p,(0,a.Z)({},i,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"commandcomposer-objects"},"CommandComposer Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class CommandComposer(MessageComposer)\n")),(0,r.kt)("p",null,"Composer for ",(0,r.kt)("inlineCode",{parentName:"p"},"Command")," messages."),(0,r.kt)("h4",{id:"__init__"},"_","_","init","_","_"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def __init__(origin_id: UnitID,\n             message_bus: MessageBusProtocol,\n             msg_type: type[MessageType],\n             chain: Message | None = None,\n             **kwargs)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"origin_id")," - The component identifier of the origin of newly created messages."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"message_bus")," - The global message bus to use."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"msg_type")," - The message type."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"chain")," - A message that acts as the ",(0,r.kt)("em",{parentName:"li"},"predecessor")," of the new message. Used to keep the same trace for multiple messages."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"**kwargs")," - Additional message parameters.")),(0,r.kt)("h4",{id:"done"},"done"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def done(callback: CommandDoneCallback) -> typing.Self\n")),(0,r.kt)("p",null,"Adds a ",(0,r.kt)("em",{parentName:"p"},"Done")," callback."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"callback")," - The callback to add.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  This composer instance to allow call chaining."),(0,r.kt)("h4",{id:"failed"},"failed"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def failed(callback: CommandFailCallback) -> typing.Self\n")),(0,r.kt)("p",null,"Adds a ",(0,r.kt)("em",{parentName:"p"},"Fail")," callback."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"callback")," - The callback to add.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  This composer instance to allow call chaining."),(0,r.kt)("h4",{id:"async_callbacks"},"async","_","callbacks"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def async_callbacks(async_cbs: bool) -> typing.Self\n")),(0,r.kt)("p",null,"Sets whether to use asynchronous callbacks."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"async_cbs")," - Enable asynchronous callbacks.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  This composer instance to allow call chaining."),(0,r.kt)("h4",{id:"timeout"},"timeout"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def timeout(timeout: float) -> typing.Self\n")),(0,r.kt)("p",null,"Sets a reply timeout."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," - The timeout (in seconds).")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  This composer instance to allow call chaining."))}u.isMDXComponent=!0}}]);