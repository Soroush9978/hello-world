"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[605],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),c=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(o.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(t),d=a,g=m["".concat(o,".").concat(d)]||m[d]||u[d]||l;return t?r.createElement(g,s(s({ref:n},p),{},{components:t})):r.createElement(g,s({ref:n},p))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,s=new Array(l);s[0]=d;var i={};for(var o in n)hasOwnProperty.call(n,o)&&(i[o]=n[o]);i.originalType=e,i[m]="string"==typeof e?e:a,s[1]=i;for(var c=2;c<l;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3326:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const l={sidebar_label:"client",title:"core.messaging.networking.client"},s=void 0,i={unversionedId:"reference/backend/core/messaging/networking/client",id:"reference/backend/core/messaging/networking/client",title:"core.messaging.networking.client",description:"Client Objects",source:"@site/docs/reference/backend/core/messaging/networking/client.md",sourceDirName:"reference/backend/core/messaging/networking",slug:"/reference/backend/core/messaging/networking/client",permalink:"/docs/reference/backend/core/messaging/networking/client",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"client",title:"core.messaging.networking.client"},sidebar:"backendSidebar",previous:{title:"message_meta_information_list",permalink:"/docs/reference/backend/core/messaging/meta/message_meta_information_list"},next:{title:"network_engine",permalink:"/docs/reference/backend/core/messaging/networking/network_engine"}},o={},c=[{value:"Client Objects",id:"client-objects",level:2},{value:"__init__",id:"__init__",level:4},{value:"set_message_handler",id:"set_message_handler",level:4},{value:"run",id:"run",level:4},{value:"process",id:"process",level:4},{value:"connect_to_server",id:"connect_to_server",level:4},{value:"send_message",id:"send_message",level:4}],p={toc:c},m="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(m,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"client-objects"},"Client Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class Client(socketio.Client)\n")),(0,a.kt)("p",null,"The client connection, based on ",(0,a.kt)("inlineCode",{parentName:"p"},"socketio.Client"),"."),(0,a.kt)("h4",{id:"__init__"},"_","_","init","_","_"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def __init__(comp_id: UnitID, config: Configuration,\n             message_builder: MessageBuilder)\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"comp_id")," - The component identifier."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"config")," - The global configuration."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"message_builder")," - A message builder instance.")),(0,a.kt)("h4",{id:"set_message_handler"},"set","_","message","_","handler"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def set_message_handler(msg_handler: ClientMessageHandler) -> None\n")),(0,a.kt)("p",null,"Sets a handler that gets called when a message arrives."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"msg_handler")," - The message handler to be called.")),(0,a.kt)("h4",{id:"run"},"run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def run() -> None\n")),(0,a.kt)("p",null,"Automatically connects to a server if one was configured."),(0,a.kt)("h4",{id:"process"},"process"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def process() -> None\n")),(0,a.kt)("p",null,"Periodically performs certain tasks."),(0,a.kt)("h4",{id:"connect_to_server"},"connect","_","to","_","server"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def connect_to_server() -> None\n")),(0,a.kt)("p",null,"Establishes the connection to the server."),(0,a.kt)("h4",{id:"send_message"},"send","_","message"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def send_message(msg: Message) -> None\n")),(0,a.kt)("p",null,"Sends a message to the server (if connected)."),(0,a.kt)("p",null,"For this, the message will be encoded as ",(0,a.kt)("em",{parentName:"p"},"JSON")," first."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"msg")," - The message to send.")))}u.isMDXComponent=!0}}]);