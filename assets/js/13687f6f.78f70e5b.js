"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4861],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>d});var a=t(7294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var i=a.createContext({}),c=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},m=function(e){var n=c(e.components);return a.createElement(i.Provider,{value:n},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,s=e.mdxType,r=e.originalType,i=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=c(t),u=s,d=p["".concat(i,".").concat(u)]||p[u]||g[u]||r;return t?a.createElement(d,o(o({ref:n},m),{},{components:t})):a.createElement(d,o({ref:n},m))}));function d(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var r=t.length,o=new Array(r);o[0]=u;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[p]="string"==typeof e?e:s,o[1]=l;for(var c=2;c<r;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5911:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>g,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=t(7462),s=(t(7294),t(3905));const r={sidebar_label:"message",title:"core.messaging.message"},o=void 0,l={unversionedId:"reference/backend/core/messaging/message",id:"reference/backend/core/messaging/message",title:"core.messaging.message",description:"Message Objects",source:"@site/docs/reference/backend/core/messaging/message.md",sourceDirName:"reference/backend/core/messaging",slug:"/reference/backend/core/messaging/message",permalink:"/docs/reference/backend/core/messaging/message",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"message",title:"core.messaging.message"},sidebar:"backendSidebar",previous:{title:"message_service",permalink:"/docs/reference/backend/core/messaging/handlers/message_service"},next:{title:"message_bus",permalink:"/docs/reference/backend/core/messaging/message_bus"}},i={},c=[{value:"Message Objects",id:"message-objects",level:2},{value:"message_name",id:"message_name",level:4},{value:"define",id:"define",level:4}],m={toc:c},p="wrapper";function g(e){let{components:n,...t}=e;return(0,s.kt)(p,(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"message-objects"},"Message Objects"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass_json\n\n@dataclass(frozen=True, kw_only=True)\nclass Message(abc.ABC)\n")),(0,s.kt)("p",null,"Base class for all messages."),(0,s.kt)("p",null,"A message, besides its actual data, consists mainly of information from where it came and where it should go."),(0,s.kt)("p",null,"This class also offers a useful decorator to easily declare new messages, like in the following example::"),(0,s.kt)("p",null,"@Message.define(",'"',"msg/command",'"',")\nclass MyCommand(Command):\nsome_number: int = 0"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"name")," - The name of the message."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"origin")," - The initial source component of the message."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"sender")," - The component from where the message came from."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"target")," - Where the message should go to."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"hops")," - A list of components the message was sent through."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"trace")," - A unique trace identifying messages that logically belong together.")),(0,s.kt)("h4",{id:"message_name"},"message","_","name"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"@staticmethod\ndef message_name() -> MessageName\n")),(0,s.kt)("p",null,"Retrieves the name of the message type on a message class basis."),(0,s.kt)("h4",{id:"define"},"define"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"@staticmethod\ndef define(name: str)\n")),(0,s.kt)("p",null,"Defines a new message."),(0,s.kt)("p",null,"The decorator takes care of wrapping the new class as a dataclass, passing the correct message\nname to its constructor. It also registers the new message type in the global ",(0,s.kt)("inlineCode",{parentName:"p"},"MessageTypesCatalog"),"."),(0,s.kt)("p",null,"Examples::"),(0,s.kt)("p",null,"@Message.define(",'"',"msg/command",'"',")\nclass MyCommand(Command):\nsome_number: int = 0"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"name")," - The name of the message.")))}g.isMDXComponent=!0}}]);